name: build

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        deps: [full, mini]
        arch: [x86_64, i686]
        configuration: [Release, Debug]
    env:
      DEPS: ${{ matrix.deps }}
      WORKSPACE: ${{ github.workspace }}
      Platform: ${{ matrix.arch }}
      Configuration: ${{ matrix.configuration }}
    steps:
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MSYS
          update: true
          install: >-
            mingw-w64-${{ matrix.arch }}-toolchain
            mingw-w64-${{ matrix.arch }}-cmake
            mingw-w64-${{ matrix.arch }}-nsis
            zip
            unzip
            tar
            zstd
            make
      - name: Checkout GDL
        uses: actions/checkout@v2
      - name: Cache MSYS2 Packages
        id: cache
        uses: actions/cache@v2
        with:
          path: D:\a\gdl\mingw
          key: cache-msys2-gdl-${{ matrix.arch }}-${{ matrix.deps }}
      - name: Install MSMPI
        if: matrix.deps == "full"
        run: |
          Invoke-WebRequest -Uri https://download.microsoft.com/download/B/2/E/B2EB83FE-98C2-4156-834A-E1711E6884FB/MSMpiSetup.exe -OutFile MSMpiSetup.exe
          .\MSMpiSetup.exe -unattend
      - name: Prepere MSYS2 Packages
        if: steps.cache.outputs.cache-hit != 'true'
        shell: msys2 {0}
        run: |
          export ROOT_DIR=`cygpath ${WORKSPACE}`/..
          ${ROOT_DIR}/gdl/.ci/build_gdl_windows.msys prep
      - name: Build GDL
        shell: msys2 {0}
        run: |
          export ROOT_DIR=`cygpath ${WORKSPACE}`/..
          ${ROOT_DIR}/gdl/.ci/build_gdl_windows.msys build
      - name: Check GDL
        shell: msys2 {0}
        run: |
          export ROOT_DIR=`cygpath ${WORKSPACE}`/..
          ${ROOT_DIR}/gdl/.ci/build_gdl_windows.msys check || exit 0
      - name: Package GDL
        shell: msys2 {0}
        run: |
          export ROOT_DIR=`cygpath ${WORKSPACE}`/..
          ${ROOT_DIR}/gdl/.ci/build_gdl_windows.msys pack
          ${ROOT_DIR}/gdl/.ci/build_gdl_windows.msys prep_deploy
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2.2.1
        with:
          name: GDL Installer (${{ matrix.deps }}, ${{ matrix.arch }}, ${{ matrix.configuration }})
          path: gdlsetup-${{ matrix.arch }}-${{ matrix.deps }}.exe
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2.2.1
        with:
          name: GDL (${{ matrix.deps }}, ${{ matrix.arch }}, ${{ matrix.configuration }})
          path: gdl-${{ matrix.arch }}-${{ matrix.deps }}.zip
