name: GDL CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        deps: [FULL, MINI]
        arch: [x86_64, i686]
    env:
      deps: ${{ matrix.deps }}
      platform: ${{ matrix.platform }}
      workspace: ${{ github.workspace }}
    steps:
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MSYS
          update: true
          install: >-
            mingw-w64-${{ matrix.arch }}-toolchain
            mingw-w64-${{ matrix.arch }}-cmake
            tar
            zstd
            make
      - name: Checkout GDL
        uses: actions/checkout@v2
      - name: Cache MSYS2 Packages
        id: cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/../mingw
          key: cache-msys2-gdl-${{ matrix.arch }}-${{ matrix.deps }}
      - name: Prepere MSYS2 Packages
        if: steps.cache.outputs.cache-hit != 'true'
        shell: msys2 {0}
        run: |
          export Platform=${{ matrix.arch }}
          export ROOT_DIR=`cygpath ${workspace}`/..
          export DEPS=${{ matrix.deps }}
          ${ROOT_DIR}/gdl/.ci/build_gdl_windows.msys prep
      - name: Build GDL
        shell: msys2 {0}
        run: |
          export Platform=${{ matrix.arch }}
          export ROOT_DIR=`cygpath ${workspace}`/..
          export DEPS=${{ matrix.deps }}
          ${ROOT_DIR}/gdl/.ci/build_gdl_windows.msys build
      - name: Check GDL
        shell: msys2 {0}
        run: |
          export Platform=${{ matrix.arch }}
          export ROOT_DIR=`cygpath ${workspace}`/..
          ${ROOT_DIR}/gdl/.ci/build_gdl_windows.msys check || exit 0
      - name: Package GDL
        shell: msys2 {0}
        run: |
          export Platform=${{ matrix.arch }}
          export ROOT_DIR=`cygpath ${workspace}`/..
          ${ROOT_DIR}/gdl/.ci/build_gdl_windows.msys pack
