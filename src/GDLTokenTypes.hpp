#ifndef INC_GDLTokenTypes_hpp_
#define INC_GDLTokenTypes_hpp_

/* $ANTLR 2.7.7 (2006-11-01): "gdlc.g" -> "GDLTokenTypes.hpp"$ */

#ifndef CUSTOM_API
# define CUSTOM_API
#endif
#undef NOP
#ifdef __cplusplus
struct CUSTOM_API GDLTokenTypes {
#endif
	enum {
		EOF_ = 1,
		ALL = 4,
		ASSIGN = 5,
		ASSIGN_INPLACE = 6,
		ASSIGN_REPLACE = 7,
		ASSIGN_ARRAYEXPR_MFCALL = 8,
		ARRAYDEF = 9,
		ARRAYDEF_CONST = 10,
		ARRAYDEF_GENERALIZED_INDGEN = 11,
		ARRAYIX = 12,
		ARRAYIX_ALL = 13,
		ARRAYIX_ORANGE = 14,
		ARRAYIX_RANGE = 15,
		ARRAYIX_ORANGE_S = 16,
		ARRAYIX_RANGE_S = 17,
		ARRAYEXPR = 18,
		ARRAYEXPR_FCALL = 19,
		ARRAYEXPR_MFCALL = 20,
		BLOCK = 21,
		BREAK = 22,
		CSBLOCK = 23,
		CONTINUE = 24,
		COMMONDECL = 25,
		COMMONDEF = 26,
		CONSTANT = 27,
		DEREF = 28,
		ELSEBLK = 29,
		EXPR = 30,
		FOR = 31,
		FOR_STEP = 32,
		FOREACH = 33,
		FOREACH_INDEX = 34,
		FOR_LOOP = 35,
		FOR_STEP_LOOP = 36,
		FOREACH_LOOP = 37,
		FOREACH_INDEX_LOOP = 38,
		FCALL = 39,
		FCALL_LIB = 40,
		FCALL_LIB_DIRECT = 41,
		FCALL_LIB_N_ELEMENTS = 42,
		FCALL_LIB_RETNEW = 43,
		GDLNULL = 44,
		IF_ELSE = 45,
		KEYDECL = 46,
		KEYDEF = 47,
		KEYDEF_REF = 48,
		KEYDEF_REF_CHECK = 49,
		KEYDEF_REF_EXPR = 50,
		LABEL = 51,
		MPCALL = 52,
		MPCALL_PARENT = 53,
		MFCALL = 54,
		MFCALL_LIB = 55,
		MFCALL_LIB_RETNEW = 56,
		MFCALL_PARENT = 57,
		MFCALL_PARENT_LIB = 58,
		MFCALL_PARENT_LIB_RETNEW = 59,
		NOP = 60,
		NSTRUC = 61,
		NSTRUC_REF = 62,
		ON_IOERROR_NULL = 63,
		PCALL = 64,
		PCALL_LIB = 65,
		PARADECL = 66,
		PARAEXPR = 67,
		PARAEXPR_VN = 68,
		DEC_REF_CHECK = 69,
		INC_REF_CHECK = 70,
		POSTDEC = 71,
		POSTINC = 72,
		DECSTATEMENT = 73,
		INCSTATEMENT = 74,
		REF = 75,
		REF_VN = 76,
		REF_CHECK = 77,
		REF_CHECK_VN = 78,
		REF_EXPR = 79,
		REF_EXPR_VN = 80,
		REPEAT = 81,
		REPEAT_LOOP = 82,
		RETURN = 83,
		RETF = 84,
		RETP = 85,
		STRUC = 86,
		SYSVAR = 87,
		UMINUS = 88,
		VAR = 89,
		VARPTR = 90,
		WHILE = 91,
		IDENTIFIER = 92,
		AND_OP = 93,
		BEGIN = 94,
		CASE = 95,
		COMMON = 96,
		COMPILE_OPT = 97,
		DO = 98,
		ELSE = 99,
		END = 100,
		ENDCASE = 101,
		ENDELSE = 102,
		ENDFOR = 103,
		ENDFOREACH = 104,
		ENDIF = 105,
		ENDREP = 106,
		ENDSWITCH = 107,
		ENDWHILE = 108,
		EQ_OP = 109,
		FORWARD = 110,
		FUNCTION = 111,
		GE_OP = 112,
		GOTO = 113,
		GT_OP = 114,
		IF = 115,
		INHERITS = 116,
		LE_OP = 117,
		LT_OP = 118,
		MOD_OP = 119,
		NE_OP = 120,
		NOT_OP = 121,
		OF = 122,
		ON_IOERROR = 123,
		OR_OP = 124,
		PRO = 125,
		SWITCH = 126,
		THEN = 127,
		UNTIL = 128,
		XOR_OP = 129,
		METHOD = 130,
		COMMA = 131,
		COLON = 132,
		END_U = 133,
		EQUAL = 134,
		DEC = 135,
		INC = 136,
		AND_OP_EQ = 137,
		ASTERIX_EQ = 138,
		EQ_OP_EQ = 139,
		GE_OP_EQ = 140,
		GTMARK_EQ = 141,
		GT_OP_EQ = 142,
		LE_OP_EQ = 143,
		LTMARK_EQ = 144,
		LT_OP_EQ = 145,
		MATRIX_OP1_EQ = 146,
		MATRIX_OP2_EQ = 147,
		MINUS_EQ = 148,
		MOD_OP_EQ = 149,
		NE_OP_EQ = 150,
		OR_OP_EQ = 151,
		PLUS_EQ = 152,
		POW_EQ = 153,
		SLASH_EQ = 154,
		XOR_OP_EQ = 155,
		MEMBER = 156,
		LBRACE = 157,
		RBRACE = 158,
		SLASH = 159,
		LSQUARE = 160,
		RSQUARE = 161,
		SYSVARNAME = 162,
		EXCLAMATION = 163,
		LCURLY = 164,
		RCURLY = 165,
		CONSTANT_HEX_BYTE = 166,
		CONSTANT_HEX_LONG = 167,
		CONSTANT_HEX_LONG64 = 168,
		CONSTANT_HEX_INT = 169,
		CONSTANT_HEX_I = 170,
		CONSTANT_HEX_ULONG = 171,
		CONSTANT_HEX_ULONG64 = 172,
		CONSTANT_HEX_UI = 173,
		CONSTANT_HEX_UINT = 174,
		CONSTANT_BYTE = 175,
		CONSTANT_LONG = 176,
		CONSTANT_LONG64 = 177,
		CONSTANT_INT = 178,
		CONSTANT_I = 179,
		CONSTANT_ULONG = 180,
		CONSTANT_ULONG64 = 181,
		CONSTANT_UI = 182,
		CONSTANT_UINT = 183,
		CONSTANT_OCT_BYTE = 184,
		CONSTANT_OCT_LONG = 185,
		CONSTANT_OCT_LONG64 = 186,
		CONSTANT_OCT_INT = 187,
		CONSTANT_OCT_I = 188,
		CONSTANT_OCT_ULONG = 189,
		CONSTANT_OCT_ULONG64 = 190,
		CONSTANT_OCT_UI = 191,
		CONSTANT_OCT_UINT = 192,
		CONSTANT_FLOAT = 193,
		CONSTANT_DOUBLE = 194,
		CONSTANT_BIN_BYTE = 195,
		CONSTANT_BIN_LONG = 196,
		CONSTANT_BIN_LONG64 = 197,
		CONSTANT_BIN_INT = 198,
		CONSTANT_BIN_I = 199,
		CONSTANT_BIN_ULONG = 200,
		CONSTANT_BIN_ULONG64 = 201,
		CONSTANT_BIN_UI = 202,
		CONSTANT_BIN_UINT = 203,
		ASTERIX = 204,
		DOT = 205,
		STRING_LITERAL = 206,
		POW = 207,
		MATRIX_OP1 = 208,
		MATRIX_OP2 = 209,
		PLUS = 210,
		MINUS = 211,
		LTMARK = 212,
		GTMARK = 213,
		LOG_NEG = 214,
		LOG_AND = 215,
		LOG_OR = 216,
		QUESTION = 217,
		STRING = 218,
		INCLUDE = 219,
		EOL = 220,
		W = 221,
		D = 222,
		L = 223,
		H = 224,
		O = 225,
		B = 226,
		EXP = 227,
		DBL_E = 228,
		DBL = 229,
		CONSTANT_OR_STRING_LITERAL = 230,
		COMMENT = 231,
		END_MARKER = 232,
		WHITESPACE = 233,
		SKIP_LINES = 234,
		CONT_STATEMENT = 235,
		END_OF_LINE = 236,
		MAX_TOKEN_NUMBER = 237,
		NULL_TREE_LOOKAHEAD = 3
	};
#ifdef __cplusplus
};
#endif
#endif /*INC_GDLTokenTypes_hpp_*/
