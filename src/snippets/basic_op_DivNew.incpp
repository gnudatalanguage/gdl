  Data_* right = static_cast<Data_*> (r);
  ULong nEl = N_Elements();
  assert(nEl);
  Data_* res = NewResult();
  SizeT i = 0;
  GDLStartRegisteringFPExceptions();
  if (nEl == 1) {
    (*this)[0] /= (*right)[0];
	GDLStopRegisteringFPExceptions();
	return res;
  }
  if ((GDL_NTHREADS = parallelize(nEl)) == 1) {
	for (OMPInt ix = i; ix < nEl; ++ix) (*res)[ix] = (*this)[ix] / (*right)[ix];

  } else {
	TRACEOMP(__FILE__, __LINE__)
#pragma omp parallel for num_threads(GDL_NTHREADS)
	for (OMPInt ix = i; ix < nEl; ++ix) (*res)[ix] = (*this)[ix] / (*right)[ix];
  }

  GDLStopRegisteringFPExceptions();
  
  return res;
