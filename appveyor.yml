image: Visual Studio 2015
branches:
  only:
    - master
clone_folder: c:\projects\gdl
configuration:
  - Release
  - Debug
environment:
  matrix:
  # #- platform: mingw64720x8664
  - platform: mingw64630x8664
  - platform: mingw64630i686
  # #- platform: mingw64730x8664
   
matrix:
  fast_finish: true
  
init:
  - git config --global core.autocrlf input

install:
  - ren "C:\Program Files\Git\usr\bin\sh.exe" _sh.exe
  - ps: |
      if ($env:platform -Match "mingw64630i686") 
      {
        #"i686-6.3.0-posix-dwarf-rt_v5-rev1"
        #"i686-5.3.0-posix-dwarf-rt_v4-rev0"
        $env:GCC="i686-6.3.0-posix-dwarf-rt_v5-rev1"
        $env:MSYSTEM="MINGW32" ; $env:mname="mingw32" ; $env:arch="i686"
      }
      elseif ($env:platform -Match "mingw64630x8664") 
      {
        #"x86_64-7.3.0-posix-seh-rt_v5-rev0"
        $env:GCC="x86_64-6.3.0-posix-seh-rt_v5-rev1"
        $env:MSYSTEM="MINGW64" ;  $env:mname="mingw64" ; $env:arch="x86_64"
      }
      elseif ($env:platform -Match "mingw64720x8664") 
      {
        #"x86_64-7.3.0-posix-seh-rt_v5-rev0"
        $env:GCC="x86_64-7.2.0-posix-seh-rt_v5-rev1"
        $env:MSYSTEM="MINGW64" ;  $env:mname="mingw64" ; $env:arch="x86_64"
      }
      elseif ($env:platform -Match "mingw64730x8664") 
      {
        #"x86_64-7.3.0-posix-seh-rt_v5-rev0"
        $env:GCC="x86_64-7.3.0-posix-seh-rt_v5-rev0"
        $env:MSYSTEM="MINGW64" ; $env:mname="mingw64" ; $env:arch="x86_64"
      }
      #"x86_64-7.3.0-posix-seh-rt_v5-rev0"
  #- ps: $env:allmsys=$true ; $env:domingw=$false  ineffective!     
  - ps: |
      if ($true)
      {
        $env:Begin_path="$env:PATH"
        $env:PATH="C:\mingw-w64\$env:GCC\$env:mname\bin;$env:PATH"
        md c:\projects\gdl\win32libs
        md c:\projects\gdl\mingw
        md c:\projects\gdl\build ;  $env:BLDDIR="c:\projects\gdl\build"
        cd c:\projects\gdl\win32libs
        $env:CC="C:/mingw-w64/$env:GCC/$env:mname/bin/gcc"
        $env:CXX="C:/mingw-w64/$env:GCC/$env:mname/bin/g++"
        $env:DOTIFF="ON"
        $env:DOGEOTIFF="ON"
        $env:platform=""
       }
  - ps: |
      if ($true)   # MSYS mode
      {
        # scripts/XXX.msys make gdl/mingw/mingw32 and load it.
        cd c:/projects/gdl
        $env:GMNAME="GraphicsMagick-1.3.30"
        $env:WXNAME="wxWidgets-3.0.2-17"
        $env:LOCALM32="c:/projects/gdl/mingw/$env:mname"
        c:/msys64/usr/bin/bash.exe -lc 'cd $OLDPWD &&. ./scripts/appveyor_1.msys'
        cd c:/projects/gdl/mingw
        rm mingw-w64-*tar.xz
        cd c:\projects\gdl\win32libs
        appveyor DownloadFile `
          http://downloads.sourceforge.net/project/plplot/plplot/5.13.0%20Source/plplot-5.13.0.tar.gz
        c:/msys64/usr/bin/bash.exe -lc 'cd /c/projects/gdl &&. ./scripts/appveyor_plplot.msys'
        $env:PLPLOTDIR="C:\projects\gdl\mingw\plplot-5.13"
        $env:WXROOT="C:\projects\gdl\mingw\$env:WXNAME"
      }
   # MINGW mode build wxWidgets 3.0.4
   # if ($env:platform -Match "mingw64630x8664")
  - ps: |
      if ($false)
      {
        # wxWidgets
        $env:WX_TOP="c:\projects\gdl\win32libs\wxWidgets-3.0.4"
        appveyor DownloadFile `
          https://github.com/wxWidgets/wxWidgets/releases/download/v3.0.4/wxWidgets-3.0.4.7z
        7z x wxWidgets-3.0.4.7z -y -o"wxWidgets-3.0.4"
        cd c:\projects\gdl\win32libs\wxWidgets-3.0.4\build\msw
        mingw32-make SHELL=cmd -f makefile.gcc setup_h BUILD=release SHARED=1 USE_GUI=1 USE_XRC=0 USE_HTML=0 USE_WEBVIEW=0 USE_MEDIA=0 USE_AUI=0 USE_RIBBON=0 USE_PROPGRID=0 USE_RICHTEXT=0 USE_STC=0 USE_OPENGL=0 VENDOR=gdl DEBUG_FLAG=1 > $env:BLDDIR/makewx.out
        echo "$env:WX_TOP mingw32-make (1) finished" >>  $env:BLDDIR/makewx.out
        echo "$env:WX_TOP mingw32-make (1) finished" 
        mingw32-make SHELL=cmd -f makefile.gcc -j4 BUILD=release SHARED=1 USE_GUI=1 USE_XRC=0 USE_HTML=0 USE_WEBVIEW=0 USE_MEDIA=0 USE_AUI=0 USE_RIBBON=0 USE_PROPGRID=0 USE_RICHTEXT=0 USE_STC=0 USE_OPENGL=0 VENDOR=gdl DEBUG_FLAG=1 >> $env:BLDDIR/makewx.out
        echo "$env:WX_TOP mingw32-make (2) finished" >>  $env:BLDDIR/makewx.out
        echo "$env:WX_TOP mingw32-make (2) finished" 
        # Below 2 lines are required for wxWidgets-3.0.4, don't know why
        copy c:\projects\gdl\win32libs\wxWidgets-3.0.4\build\msw\gcc_mswudll\coredll_headerctrlg.o c:\projects\gdl\win32libs\wxWidgets-3.0.4\build\msw\gcc_mswudll\coredll_headerctrlgo
        mingw32-make SHELL=cmd -f makefile.gcc -j4 BUILD=release SHARED=1 USE_GUI=1 USE_XRC=0 USE_HTML=0 USE_WEBVIEW=0 USE_MEDIA=0 USE_AUI=0 USE_RIBBON=0 USE_PROPGRID=0 USE_RICHTEXT=0 USE_STC=0 USE_OPENGL=0 VENDOR=gdl DEBUG_FLAG=1
        # for mingw usage we need to define wxWidgets_ROOT_DIR
        #
        $env:wxWidgets_ROOT_DIR=$env:WX_TOP
        # The above builds ok but does not link with plplot build.
        # PLplot
        cd c:\projects\gdl\win32libs
        appveyor DownloadFile `
          http://downloads.sourceforge.net/project/plplot/plplot/5.13.0%20Source/plplot-5.13.0.tar.gz
        tar zxf plplot-5.13.0.tar.gz
        md plplot-5.13.0/build -ErrorAction silentlycontinue
        cd plplot-5.13.0/build ; rm * -Recurse  -ErrorAction silentlycontinue
        cd c:\projects\gdl\win32libs
        #
        C:\msys64\usr\bin\bash.exe -lc "mkdir -p /c/projects/gdl/mingw/plplot-5.13"
        $env:PLPLOTDIR="C:\projects\gdl\mingw\plplot-5.13"
        #
        # previously, plplot failed to bring in the wxwidgets build because the version is not recognized in the
        # cmake module findwxwidgets.cmake (customized in plplot). The "win32" portion of the patch
        # scripts/patch/Findwx.cmake.patch corrects this
        #
        c:\msys64\usr\bin\bash.exe -lc 'cd /c/projects/gdl/win32libs && . /c/projects/gdl/scripts/patch/patch_plplot.sh'
        echo "mingw build of plplot is done via dos commands scripts/appveyor_plplot.bat"
        #
        # Yet still, the plplot test does not work 'cause wxwidgets.dll is not loaded.
        # Same situation occurs when msys is used to compile.
        }
       else #
       {
       C:\msys64\usr\bin\bash.exe -lc "cd /c/projects/gdl && . scripts/convert_wx.msys"
       $env:WX_TOP="C:\projects\gdl\win32libs\$env:WXNAME"
       $env:LIB_DIR="\c\projects\gdl\win32libs\$env:WXNAME\lib\gcc_dll" 
       }
  #
  #- cmd /K /E:ON ..\scripts\appveyor_plplot.bat This leaves wxWidgets driver behind !!  - ps: |
  # BSD-XDR
  - ps: cd c:\projects\gdl\win32libs
  - ps: appveyor DownloadFile `
          https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/bsd-xdr/bsd-xdr-1.0.0.tar.gz
  - C:\msys64\usr\bin\bash.exe -lc "cd /c/projects/gdl &&. scripts/appveyor_bsdxdr.msys"

  - ps: |
      if ($false) # MINGW mode
      { 
        # GNUWin32 (GNU Readline, Zlib, libPNG, PCRE, libtiff)
        # TODO: Find appropriate libtiff with TIFFField, TIFFFieldWithTag and TIFFFieldName (and libgeotiff?)
        #       (Remember to remove -DTIFF=OFF -DGEOTIFF=OFF from build_script when done)
        cd c:\projects\gdl\win32libs
        appveyor DownloadFile https://downloads.sourceforge.net/project/gnuwin32/readline/5.0-1/readline-5.0-1-lib.zip
        appveyor DownloadFile https://downloads.sourceforge.net/project/gnuwin32/zlib/1.2.3/zlib-1.2.3-lib.zip
        appveyor DownloadFile https://downloads.sourceforge.net/project/gnuwin32/libpng/1.2.37/libpng-1.2.37-lib.zip
        appveyor DownloadFile https://downloads.sourceforge.net/project/gnuwin32/pcre/7.0/pcre-7.0-lib.zip
        #appveyor DownloadFile https://downloads.sourceforge.net/project/gnuwin32/tiff/3.8.2-1/tiff-3.8.2-1-lib.zip
        7z x readline-5.0-1-lib.zip
        7z x zlib-1.2.3-lib.zip
        7z x libpng-1.2.37-lib.zip
        7z x pcre-7.0-lib.zip
        #7z x tiff-3.8.2-1-lib.zip
        appveyor DownloadFile https://downloads.sourceforge.net/project/gnuwin32/readline/5.0-1/readline-5.0-1-bin.zip
        appveyor DownloadFile https://downloads.sourceforge.net/project/gnuwin32/zlib/1.2.3/zlib-1.2.3-bin.zip
        appveyor DownloadFile https://downloads.sourceforge.net/project/gnuwin32/libpng/1.2.37/libpng-1.2.37-bin.zip
        appveyor DownloadFile https://downloads.sourceforge.net/project/gnuwin32/pcre/7.0/pcre-7.0-bin.zip
        #appveyor DownloadFile https://downloads.sourceforge.net/project/gnuwin32/tiff/3.8.2-1/tiff-3.8.2-1-bin.zip
        7z x readline-5.0-1-bin.zip -y
        7z x zlib-1.2.3-bin.zip -y
        7z x libpng-1.2.37-bin.zip -y
        7z x pcre-7.0-bin.zip -y
        #7z x tiff-3.8.2-1-bin.zip -y
        mv mingw\libxdr.dll.a c:\projects\gdl\win32libs\lib
        mv rpc c:\projects\gdl\win32libs\include
        mv mingw\mgwxdr-0.dll c:\projects\gdl\win32libs\bin
       }
  - ps: |
      if ($false)  # MINGW mode
      {
       # Eigen
        cd c:\projects\gdl\win32libs
        appveyor DownloadFile `
          https://bitbucket.org/eigen/eigen/get/3.3.4.tar.bz2 -FileName eigen-eigen-5a0156e40feb.tar.bz2
        tar jxf eigen-eigen-5a0156e40feb.tar.bz2
        md eigen-eigen-5a0156e40feb/build
        # cmake is generating PS error, plain make seems to do alright.
        #cmake "eigen-eigen-5a0156e40feb" "-Beigen-eigen-5a0156e40feb/build" -G "MinGW Makefiles" "-DCMAKE_BUILD_TYPE=$($env:CONFIGURATION)" -DCMAKE_INSTALL_PREFIX=c:\projects\gdl\win32libs > $env:BLDDIR/eigen3.out
        cd eigen-eigen-5a0156e40feb/build
        echo " eigen3 (eigen-eigen-5a0156e40feb) to be made " 
        #echo " eigen3 (eigen-eigen-5a0156e40feb) to be made "  >> $env:BLDDIR/eigen3.out
        mingw32-make install >> $env:BLDDIR/eigen3.out
        }
  - ps: |
      if  ($false)  # MINGW mode # gsl is downloaded in appveyor_1.msys
      {
        # GSL
        c:\msys64\usr\bin\bash.exe -lc 'cd /c/projects/gdl/win32libs && . /c/projects/gdl/scripts/appveyor_gsl.msys'
        }

before_build:
  # disabling tests that failed from the get-go on Windows (temporarily!)
  # Now that make check is being run from a powershell script, errors in these tests do not
  # produce an overall failure.  Hang-ups will occur, however, so the exclusion list moves it along.
  - ps: cd C:\projects\gdl\testsuite
  # ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_binfmt.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_bug_3300626.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_bug_3275334.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_bug_3104214.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_bug_2876161.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_bug_2610174.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_bug_1779553.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_bug_3376577.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_bug_3394430.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_bug_3595172.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_bug_635.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_bug_709.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_bug_719.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_bug_n000587.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_bug_n000608.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_bug_n000720.pro' -NotMatch)

  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_call_external.pro' -NotMatch)

  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_clip.pro' -NotMatch)
  # test_clip fails.
  # test_container triggers an assertion failure: File: C:/projects/gdl/src/envt.cpp, Line 1368
  # ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_container.pro' -NotMatch)
  # test_contour: % DEVICE: Keyword GET_DECOMPOSED not allowed for call to: DEVICE
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_contour.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_correlate.pro' -NotMatch)
  # test_delvarrnew: needs a permissive shell environment that Windows won't give it.
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_delvarrnew.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_device.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_dicom.pro' -NotMatch)

  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_execute.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_extra_keywords.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_fft_dim.pro' -NotMatch)
  # test_file_move hangs appveyor
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_file_move.pro' -NotMatch)
  # ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_fix.pro' -NotMatch)
  # 1 error in test_fix
  # ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_finite.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_fixprint.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_formats.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_fx_root.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_fz_roots.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_gc.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_get_lun.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_get_screen_size.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_gh00178.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_hist_2d.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_idlneturl.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_indgen.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_interpol.pro' -NotMatch)
  # make_dll hangs up 64-bit appveyor build.
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_make_dll.pro' -NotMatch)
  # matrix_muiltiply: passes (?), but long.
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_matrix_multiply.pro' -NotMatch)
  # ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_memory.pro' -NotMatch)
  # ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_message.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_moment.pro' -NotMatch)
  # ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_multiroots.pro' -NotMatch)
  # ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_obj_isa.pro' -NotMatch)
  # obj_new fails -hangs- because the object example is too big for win32
  # then, after replacement with a smaller definition, fails on appveyor
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_obj_new.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_plot_oo.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_plot_ranges.pro' -NotMatch)
  #AC 2018 : should be OK now (plot_usersym)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_plot_usersym.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_plotting_ranges.pro' -NotMatch)
  # pmulti can hang 64-bit build.% TEST_PMULTI: Error opening file.
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_pmulti.pro' -NotMatch)
  # test_point_lun: does not exit after: % Execution halted at: READ_4B_FILE       120 F:
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_point_lun.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_postscript.pro' -NotMatch)
  # ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_product.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_ps_decomposed.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_python.pro' -NotMatch)
  # % TEST_IMAGE_STATISTICS: Image for test (Saturn.jpg) not found, test aborted
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_image_statistics.pro' -NotMatch)
  # ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_n_tags.pro' -NotMatch)
  # ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_nans_in_sort_and_median.pro' -NotMatch)
  # ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_nestedloop.pro' -NotMatch)
  # ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_netcdf.pro' -NotMatch)
  # ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_parse_url.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_python_module_0.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_python_module_1.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_python_module_2.pro' -NotMatch)
  #% Execution halted at: TEST_RANDOM_POISSON   229
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_random.pro' -NotMatch)
  #% Execution halted at: TESTREADF          192
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_readf.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_resolve_routine.pro' -NotMatch)
  # ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_same_name.pro' -NotMatch)
  # ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_simplex.pro' -NotMatch)
  #% SPAWN: UNIT keyword is not implemented yet!
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_spawn_unit.pro' -NotMatch)
  #% Type conversion error: Unable to convert given STRING: '"
  # ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_step.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_systime.pro' -NotMatch)
  # systime not finished
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_tic_toc.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_total.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_rounding.pro' -NotMatch)
  #AC 2018 : should be OK now? N (test_tv)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_tv.pro' -NotMatch)
  # ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_typename.pro' -NotMatch)
  # test_typename is probably using a dicom dictionary, too large for win32/
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_wait.pro' -NotMatch)
  # ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_wavelet.pro' -NotMatch)
  # test_window_background will hang the 64-bit build up in appveyor.
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_window_background.pro' -NotMatch)

  # ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_wordexp.pro' -NotMatch)
  # test_xdr gives a segfault
  # ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_xdr.pro' -NotMatch)
  - ps: Set-Content -Path "Makefile.am" -Value (get-content -Path "Makefile.am" | Select-String -Pattern 'test_zip.pro' -NotMatch)

  - ps: cd  C:\projects\gdl
build_script:
  - ps: $env:GMNAME=""
  # the MSYS script in win32 will build a 32-bit GraphicsMagick distro on a healthy MSYS system
  # but it won't for appveyor.  So, GMNAME="" to quash it and move on, the repo distribution created by
  # appveyor_1.msys will be there for 8-bit images. 
  - ps: |
      if ( "x$env:GMNAME" -eq "x")
      {
      echo "No graphicsmagick build attempted "
      }
      else
      {
      echo " $env:GMNAME: 32-bit Quantum GraphicsMagick "
      echo " $env:GMNAME "
      cmd /c C:\msys64\usr\bin\bash.exe -lc "cd /c/projects/gdl && ./scripts/win32/bld_gm32.msys" 2>$null
      }
  # Given that a GM-Q32 directory will not be present in mingw/, GMNAME can be anything to trigger inclusion
  # in the appveyor_gdl build: The distribution is created in appveyor_1.msys from the repo.
  - set GMNAME=GraphicsMagick-1.3.27
  - PowerShell c:\projects\gdl\scripts\ps1\make_gdl.ps1
  # Any message sent to stderr in appeyor.yml can be counted as an error, unless it is generated in 
  # a script.  Hence make_gdl.ps1, and only real hang-ups are failures.
  
on_failure:
  - ps: cat c:\projects\gdl\build\testsuite\Testing\Temporary\LastTest.log

after_build:
  - cd c:\projects\gdl
  - ps: |
      if ( $env:platform -Match "mingw64630x8664") # in make_gdl.ps1, this is done before make check.
      {
      C:\msys64\usr\bin\bash.exe -lc "mkdir -p /c/projects/gdl/install/gdl/bin"
      copy $env:LOCALM32\bin\*.dll c:\projects\gdl\install\gdl\bin
      copy $env:PLPLOTDIR\bin\lib*.dll c:\projects\gdl\install\gdl\bin
      copy C:\mingw-w64\$env:GCC\$env:mname\bin\*.dll c:\projects\gdl\install\gdl\bin
      }
  # bring in the driver's dll to the installation directory.
  # there are also .driver_info files here the plplot needs to find.
  # also in share/plplot-5.13.0 there are mapping and color files.
  - ps: $dyndrivers = Test-path -Path  "$env:PLPLOTDIR/lib/plplot5.13.0"
  - ps: |
      if ( $dyndrivers -eq $true )
      {
       copy $env:PLPLOTDIR/lib/plplot5.13.0/drivers/*.dll c:/projects/gdl/install/gdl/bin
       copy -r $env:PLPLOTDIR/lib/plplot5.13.0 c:/projects/gdl/install/plplot5.13
      }               # evidently, the -erroraction wasn't sufficient to protect this.
      else
      {
      echo "No dynamic driver directory, assumed no dynamic drivers."
      }
  
  - ps: copy -r $env:PLPLOTDIR/share/plplot5.13.0 c:/projects/gdl/install/plplot5.13/lib
  - ps: copy INSTALL.plplot c:/projects/gdl/install

  - cd c:\projects\gdl
  - ps: copy scripts/rungdl.bat c:/projects/gdl/install/rungdl.bat
  - ps: copy -r src/pro install/gdl/gdllib
  - 7z a gdl_build.zip install build


artifacts:
  - path: gdl_build.zip
    name: GDL
  
deploy:
  release: gdl-master-build$(appveyor_build_version)
  description: 'Test release'
  provider: GitHub
  auth_token:
    secure: IhTPN2ggVb/gSjAnDAGleGO8+QQJETWjbuNtAvwQcJgEzKcZK944bMDIxSuLASgw
  draft: false
  prerelease: false
  on:
    branch: master                 # release from master branch only
    appveyor_repo_tag: true        # deploy on tag push only

#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
